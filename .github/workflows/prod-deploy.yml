name: "[CD:Production] Build and Release"

on:
    push:
        tags:
            - "v*.*.*"

permissions:
    contents: write

jobs:
    version-check:
        runs-on: ubuntu-latest
        outputs:
          version-code: ${{ steps.version-code-gen.outputs.GHA_VERSION_CODE }}
        steps:
            - uses: actions/checkout@v3
            - name: Set up new test tag
              run: |
                TAGNAME=${{ github.ref_name }}
                NEW_NAME="${TAGNAME//v/}"
                echo GHA_NEW_TAG_NAME=$NEW_NAME >> "$GITHUB_ENV"
            - name: Tag/Release search
              run: echo "GHA_V_COUNTER=$(grep '${{ format('version{0}', ':') }} ${{ env.GHA_NEW_TAG_NAME }}' pubspec.yaml | wc -l)" >> "$GITHUB_ENV"
              shell: bash
            - name: Tag Outout
              run: |
                echo "env.GHA_V_COUNTER = ${{ env.GHA_V_COUNTER }}"
                echo "env.GHA_NEW_TAG_NAME = ${{ env.GHA_NEW_TAG_NAME }}"
              shell: bash
            - name: "If pubspec isn't updated, delete the release and tag"
              uses: dev-drprasad/delete-tag-and-release@v1.0
              if: env.GHA_V_COUNTER == '0'
              with:
                tag_name: ${{ github.ref_name }}
                github_token: ${{ secrets.GITHUB_TOKEN }}
                delete_release: true
            - name: Find '${{ github.ref_name }}' in pubspec.yaml
              if: env.GHA_V_COUNTER == '0'
              uses: actions/github-script@v2.1.0
              with:
                script: |
                    core.setFailed('pubspec.yaml not updated to new version ${{ env.GHA_NEW_TAG_NAME }}!')
            - name: Get version code
              id: version-code-gen
              run: |
                awk '/${{ format('version{0}', ':') }} ${{ env.GHA_NEW_TAG_NAME }}/ {print}' pubspec.yaml | awk -F '+' '{print $NF}'
                temp_GHA_VERSION_CODE="$(awk '/${{ format('version{0}', ':') }} ${{ env.GHA_NEW_TAG_NAME }}/ {print}' pubspec.yaml | awk -F '+' '{print $NF}')"
                echo GHA_VERSION_CODE="$(echo $temp_GHA_VERSION_CODE | tr -d -c 0-9)" >> "$GITHUB_OUTPUT"

    build-android-apk:
        runs-on: ubuntu-latest
        needs: version-check
        steps:
            - uses: actions/checkout@v3
            - run: |
                echo "${{ secrets.ANDROID_UPLOAD_KEY_KEYSTORE}}" > release.keystore.asc
                gpg -d --passphrase "${{ secrets.ANDROID_UPLOAD_KEY_PASSWORD }}" --batch release.keystore.asc > ${{ github.workspace }}/upload-keystore.jks
                echo -e "storePassword=${{secrets.ANDROID_UPLOAD_KEY_PASSWORD}}\nkeyPassword=${{secrets.ANDROID_UPLOAD_KEY_PASSWORD}}\nkeyAlias=upload\nstoreFile=${{ github.workspace }}/upload-keystore.jks" > android/key.properties
            - name: Setup Flutter
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '16.x'
            - uses: subosito/flutter-action@v2.10.0
              with:
                flutter-version: 3.10.5
                channel: 'stable'
                cache: true
                architecture: x64
            - name: Build Android APK
              run: flutter build apk
            - name: "Artifact: Upload apk"
              uses: actions/upload-artifact@v3
              with:
                name: android-apk-release
                path: build/app/outputs/apk/release/app-release.apk

    build-web:
        runs-on: ubuntu-latest
        needs: version-check
        steps:
        - uses: actions/checkout@v3
        - name: Setup Flutter
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '16.x'
        - uses: subosito/flutter-action@v2.10.0
          with:
            flutter-version: 3.10.5
            channel: 'stable'
            cache: true
            architecture: x64
        - name: Build Web App
          run: flutter build web
        - name: Zip Output directory
          uses: montudor/action-zip@v1
          with:
            args: zip -qq -r web-zip-release.zip build/web
        - name: "Artifact: Upload output directory"
          uses: actions/upload-artifact@v3
          with:
            name: web-directory-release
            path: build/web
        - name: "Artifact: Upload output zip"
          uses: actions/upload-artifact@v3
          with:
            name: web-zip-release
            path: web-zip-release.zip
    release-web:
        needs: build-web
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - name: "Artifacts: Download Output Directory"
          uses: actions/download-artifact@v3
          with:
            name: web-directory-release
            path: build/web
        - name: Deploy to Production Site
          uses: FirebaseExtended/action-hosting-deploy@v0
          with:
            repoToken: '${{ secrets.GITHUB_TOKEN }}'
            firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SIMPLE_TRAVELPLANNER }}'
            channelId: live
            projectId: simple-travelplanner

    release-github:
        needs: [build-android-apk, build-web]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: "Artifacts: Download Web Zip"
              uses: actions/download-artifact@v3
              with:
                name: web-zip-release
                path: build/release
            - name: "Artifacts: Download Android APK"
              uses: actions/download-artifact@v3
              with:
                name: android-apk-release
                path: build/release
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                generate_release_notes: true
                files: |
                  build/release/app-release.apk
                  build/release/web-zip-release.zip
